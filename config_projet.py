# -*- coding: utf-8 -*-
"""config_projet_jaziri.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_knuTmNlMWNA-FznmC2BQSBWsmbx3gg8
"""
import utils1
import utils2
def load_spark():
  return utils1.spark

def lire_data(chemin):
  dataset = utils1.spark.read.csv(chemin,inferSchema=True,header =True)
  return dataset

def predictPriceClosing(data,Nom):
  datasetResult = data.filter(data.Name == Nom)
  assembler = utils2.VectorAssembler(inputCols=['Open','Daily_High','Daily_Low'], outputCol = 'Attributes')
  output = assembler.setHandleInvalid("skip").transform(datasetResult) ## enlever les nulls
  output_result = output.select(["Attributes","Closing_Price","Date"])
  train_data,test_data = output_result.randomSplit([0.8,0.2])
  regressor = utils2.LinearRegression(featuresCol = 'Attributes', labelCol= 'Closing_Price')
  regressor = regressor.fit(train_data)
  pred = regressor.evaluate(test_data)
  Pred = pred.predictions
  
  Pred.toPandas().to_csv("/content/prediction_results.csv")
  trainingSummary_reg = regressor.summary
  print("r2(All Features): %f" % trainingSummary_reg.r2)
  train_data_pd=train_data.toPandas()
  test_data_pd = test_data.toPandas()
  Pred_pd = Pred.toPandas()
  res = Pred_pd.plot(x='Date', y=['Closing_Price','prediction'], kind='line', figsize=(15,6))	
  res.figure.savefig('/content/resul.png')
  